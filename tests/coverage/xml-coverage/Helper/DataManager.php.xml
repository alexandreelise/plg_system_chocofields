<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="DataManager.php" path="/Helper">
    <totals>
      <lines total="93" comments="26" code="67" executable="19" executed="9" percent="47.37"/>
      <methods count="1" tested="0" percent="0.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="AE\Library\CustomField\Helper\DataManager" start="31" executable="19" executed="9" crap="32.99">
      <namespace name="AE\Library\CustomField\Helper"/>
      <method name="createIfNotExistsArticleJsonApiFile" signature="createIfNotExistsArticleJsonApiFile(int $categoryId, int $articleId, string $baseUrl, ?int $resourceId): array" start="43" end="92" crap="32.99" executable="19" executed="9" coverage="47.368421052632"/>
    </class>
    <coverage>
      <line nr="46">
        <covered by="AE\Library\CustomField\Helper\Tests\DynamicMappingTest::testPrefillRemoteFieldsWithValidDataReturnsNonEmptyArray"/>
      </line>
      <line nr="51">
        <covered by="AE\Library\CustomField\Helper\Tests\DynamicMappingTest::testPrefillRemoteFieldsWithValidDataReturnsNonEmptyArray"/>
      </line>
      <line nr="53">
        <covered by="AE\Library\CustomField\Helper\Tests\DynamicMappingTest::testPrefillRemoteFieldsWithValidDataReturnsNonEmptyArray"/>
      </line>
      <line nr="55">
        <covered by="AE\Library\CustomField\Helper\Tests\DynamicMappingTest::testPrefillRemoteFieldsWithValidDataReturnsNonEmptyArray"/>
      </line>
      <line nr="57">
        <covered by="AE\Library\CustomField\Helper\Tests\DynamicMappingTest::testPrefillRemoteFieldsWithValidDataReturnsNonEmptyArray"/>
      </line>
      <line nr="79">
        <covered by="AE\Library\CustomField\Helper\Tests\DynamicMappingTest::testPrefillRemoteFieldsWithValidDataReturnsNonEmptyArray"/>
      </line>
      <line nr="84">
        <covered by="AE\Library\CustomField\Helper\Tests\DynamicMappingTest::testPrefillRemoteFieldsWithValidDataReturnsNonEmptyArray"/>
      </line>
      <line nr="86">
        <covered by="AE\Library\CustomField\Helper\Tests\DynamicMappingTest::testPrefillRemoteFieldsWithValidDataReturnsNonEmptyArray"/>
      </line>
      <line nr="91">
        <covered by="AE\Library\CustomField\Helper\Tests\DynamicMappingTest::testPrefillRemoteFieldsWithValidDataReturnsNonEmptyArray"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="3"/>
      <line no="4">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="5">
        <token name="T_DOC_COMMENT"> * Class that behaves like a mini cache</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> * but files do no expire or get removed</token>
      </line>
      <line no="7">
        <token name="T_DOC_COMMENT"> * user have to remove them manually for now</token>
      </line>
      <line no="8">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="9">
        <token name="T_DOC_COMMENT"> * @version       0.1.0</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT"> * @package       DataManager</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT"> * @author        Alexandre ELIS&#xC9; &lt;contact@alexandre-elise.fr&gt;</token>
      </line>
      <line no="12">
        <token name="T_DOC_COMMENT"> * @copyright (c) 2009-2021 . Alexandre ELIS&#xC9; . Tous droits r&#xE9;serv&#xE9;s.</token>
      </line>
      <line no="13">
        <token name="T_DOC_COMMENT"> * @license       GPL-2.0-and-later GNU General Public License v2.0 or later</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT"> * @link          https://coderparlerpartager.fr</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="16"/>
      <line no="17">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AE</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Library</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">CustomField</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Helper</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18"/>
      <line no="19">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AE</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Library</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">CustomField</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Core</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Constant</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AE</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Library</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">CustomField</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ErrorHandling</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">UnprocessableEntityException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AE</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Library</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">CustomField</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Util</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Util</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Joomla</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">CMS</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Filesystem</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">File</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">file_exists</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">file_get_contents</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="25">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">filesize</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26"/>
      <line no="27">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="28">
        <token name="T_DOC_COMMENT"> * Class DataManager</token>
      </line>
      <line no="29">
        <token name="T_DOC_COMMENT"> * @package AE\Library\CustomField\Helper</token>
      </line>
      <line no="30">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="31">
        <token name="T_ABSTRACT">abstract</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DataManager</token>
      </line>
      <line no="32">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">	</token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="34">
        <token name="T_DOC_COMMENT">	 *</token>
      </line>
      <line no="35">
        <token name="T_DOC_COMMENT">	 * @param   int       $categoryId</token>
      </line>
      <line no="36">
        <token name="T_DOC_COMMENT">	 * @param   int       $articleId</token>
      </line>
      <line no="37">
        <token name="T_DOC_COMMENT">	 * @param   string    $baseUrl</token>
      </line>
      <line no="38">
        <token name="T_DOC_COMMENT">	 * @param   int|null  $resourceId</token>
      </line>
      <line no="39">
        <token name="T_DOC_COMMENT">	 *</token>
      </line>
      <line no="40">
        <token name="T_DOC_COMMENT">	 * @return array</token>
      </line>
      <line no="41">
        <token name="T_DOC_COMMENT">	 * @throws \AE\Library\CustomField\ErrorHandling\UnprocessableEntityException</token>
      </line>
      <line no="42">
        <token name="T_DOC_COMMENT">	 */</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">createIfNotExistsArticleJsonApiFile</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$categoryId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$articleId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$baseUrl</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$resourceId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">	</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">		</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$categoryId</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$articleId</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$resourceId</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">		</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">			</token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UnprocessableEntityException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Invalid input data. Cannot continue."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">		</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$filename</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Util</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">computeDataFilename</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$categoryId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$articleId</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$baseUrl</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$resourceId</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">		</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$jsonResponse</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">		</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">file_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$filename</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">filesize</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$filename</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">		</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">			</token>
        <token name="T_VARIABLE">$jsonResponse</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">file_get_contents</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$filename</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">		</token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">file_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$filename</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">filesize</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$filename</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">		</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">			</token>
        <token name="T_TRY">try</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">			</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">				</token>
        <token name="T_VARIABLE">$jsonResponse</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Util</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">fetchApiData</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$baseUrl</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$resourceId</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">				</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">				</token>
        <token name="T_STRING">File</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">write</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$filename</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jsonResponse</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">UnprocessableEntityException</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$noContentException</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">			</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">				</token>
        <token name="T_VARIABLE">$jsonResponse</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">NotFoundException</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$notFoundException</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">			</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">				</token>
        <token name="T_VARIABLE">$jsonResponse</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">			</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">			</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">		</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">		</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$jsonResponse</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">		</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">			</token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UnprocessableEntityException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">		</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$jsonArray</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Util</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">getJsonArray</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$jsonResponse</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">		</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$jsonArray</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">		</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">			</token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UnprocessableEntityException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">		</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jsonArray</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="93">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="94"/>
    </source>
  </file>
</phpunit>
